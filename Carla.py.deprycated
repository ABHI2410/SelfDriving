import carla
import random
import cv2
import math
import numpy as np
import time 

counter = 0
actor_list = []

def camera_callback(image,data_dict):
    data_dict['image'] = np.reshape(np.copy(image.raw_data),(image.height,image.width,4))

def maintain_speed (speed):
    prefered_speed = 40
    speed_tolarance = 2
    if speed >= prefered_speed:
        return 0
    elif speed < prefered_speed - speed_tolarance:
        return 0.8
    else :
        return 0.4
    
try:
    client = carla.Client('localhost', 2000)
    world = client.get_world()
    world_map = world.get_map()
    blueprints = world.get_blueprint_library()
    spawn_points = world_map.get_spawn_points()

    vehicle_blueprint = random.choice(blueprints.filter('vehicle.*'))
    spawn_point = random.choice(spawn_points)
    vehicle = world.try_spawn_actor(vehicle_blueprint,spawn_point)
    actor_list.append(vehicle)

    camera_offset_z = 3
    camera_offset_x = -5

    camera_blueprint = world.get_blueprint_library().find('sensor.camera.rgb')
    camera_blueprint.set_attribute('image_size_x', '1080')
    camera_blueprint.set_attribute('image_size_y', '720')
    camera_blueprint.set_attribute('fov', '110')

    camera_initial_transformation = carla.Transform(carla.Location(z=camera_offset_z,x=camera_offset_x))
    camera = world.spawn_actor(camera_blueprint,camera_initial_transformation,attach_to=vehicle)
    actor_list.append(camera)
    camera_data = {"image": np.zeros((480,640,4))}
    camera.listen(lambda image: camera_callback(image,camera_data))

    
    quit = False
    while True:
        world.tick()
        if cv2.waitKey(1) == ord('q'):
            quit = True
            break
        image = camera_data['image']
        steering_angle = 0
        v = vehicle.get_velocity()
        speed = round(3.6 * math.sqrt(v.x**2 + v.y**2 + v.z**2),0)
        image = cv2.putText(image, f"Speed: {str(int(speed))} kmh", (30,50),cv2.FONT_HERSHEY_COMPLEX,0.5,(255,255,255),1,cv2.LINE_AA)
        estimate_throttle = maintain_speed(speed)
        vehicle.apply_control(carla.VehicleControl(
            throttle = estimate_throttle,
            steer = steering_angle
        ))
        cv2.imshow('Carla ',image)
        
    


finally:

    print('destroying actors')
    for actor in actor_list:
        actor.destroy()
    print('done.')

 

       
        

